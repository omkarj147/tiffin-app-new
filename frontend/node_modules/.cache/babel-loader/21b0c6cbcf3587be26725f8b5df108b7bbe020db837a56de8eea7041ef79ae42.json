{"ast":null,"code":"const fetchOrders = async () => {\n  try {\n    setLoading(true);\n    const token = localStorage.getItem('token');\n    const response = await axios.get('http://localhost:5002/api/orders/my-orders', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    setOrders(response.data);\n  } catch (err) {\n    setError('Failed to fetch orders');\n    console.error('Error fetching orders:', err);\n  } finally {\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["fetchOrders","setLoading","token","localStorage","getItem","response","axios","get","headers","setOrders","data","err","setError","console","error"],"sources":["c:/Users/omkar/Desktop/New Project/frontend/src/components/Orders/Orders.js"],"sourcesContent":["const fetchOrders = async () => {\n  try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5002/api/orders/my-orders', {\n          headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n          }\n      });\n      setOrders(response.data);\n  } catch (err) {\n      setError('Failed to fetch orders');\n      console.error('Error fetching orders:', err);\n  } finally {\n      setLoading(false);\n  }\n};\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACAC,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,4CAA4C,EAAE;MAC3EC,OAAO,EAAE;QACL,eAAe,EAAE,UAAUN,KAAK,EAAE;QAClC,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACFO,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAAC;EAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,QAAQ,CAAC,wBAAwB,CAAC;IAClCC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEH,GAAG,CAAC;EAChD,CAAC,SAAS;IACNV,UAAU,CAAC,KAAK,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}